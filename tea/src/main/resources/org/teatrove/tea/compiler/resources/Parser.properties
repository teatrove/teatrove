#
# Error message definitions for Parser.
#

template.start=\
	No text or whitespace allowed before template declaration excepting directives such as 'import'.
template.declaration=\
	Template must begin with 'template'
template.substitution.lbrace=\
	Left brace required for substitution parameter
template.substitution.rbrace=\
	Right brace required for substitution parameter
template.substitution.ellipsis=\
	Ellipsis required for substitution parameter

identifier.reserved.word=\
	Reserved word ''{0}'' is not allowed here
identifier.expected=\
	Identifier expected

name.reserved.word=\
	Reserved word ''{0}'' cannot be used as part of name
name.identifier.expected=\
	Identifier expected in name
name.rbracket=\
	Right bracket expected in type name

params.lparen=\
	Left paren expected for parameters
params.premature.end=\
	Premature end of parameter list
params.rparen.expected=\
	Right paren expected for parameters

lvalue.reserved.word=\
	Reserved word ''{0}'' cannot be used as a variable name
lvalue.identifier.expected=\
	Identifier expected for variable name

block.lbrace.expected=\
	Left brace expected to start block
block.rbrace.expected=\
	Right brace expected to end block

statement.expected=\
	Statement expected
statement.misuse.else=\
	No matching 'if' statement for 'else'
statement.misuse.in=\
	Keyword 'in' can only be used with a foreach statement
statement.misuse.reverse=\
	Keyword 'reverse' can only be used with a foreach statement
statement.misuse.import=\
	Keyword 'import' can only be used before the template signature declaration

if.condition=\
	If statement condition must be inside parenthesis

ternary.colon.expected=\
	Colon expected on right side of ternary
	
foreach.lparen.expected=\
	Left paren required
foreach.in.expected=\
	Keyword 'in' expected
foreach.rparen.expected=\
	Right paren required
foreach.as.not.allowed=\
        'as' reserved word can only be used to iterate collections.

assignment.equals.expected=\
	Equals character expected for assignment

list.lparen.expected=\
	Left paren expected to start list
list.lbracket.expected=\
	Left bracket expected to start list
list.premature.end=\
	Premature end of list
list.rparen.expected=\
	Right paren expected to end list
list.rbracket.expected=\
	Right bracket expected to end list
list.not.associative=\
	associative array '=>' delimiter not allowed here.

equality.misuse.assign=\
	Illegal assignment; must use '==' operator for equality test

lookup.reserved.word=\
	Reserved word ''{0}'' cannot be used as a property name
lookup.identifier.expected=\
	Identifier expected for property lookup
lookup.empty.brackets=\
	Missing array index expression
lookup.rbracket.expected=\
	Right bracket expected

factor.rparen.expected=\
	Right paren expected
factor.empty.parens=\
	Expression expected inside parenthesis
factor.number.invalid=\
	Invalid number
factor.expression.expected=\
	Expression expected
factor.rparen.unmatched=\
	No matching left paren
factor.rbrace.unmatched=\
	No matching left brace
factor.rbracket.unmatched=\
	No matching left bracket
factor.illegal.assignment=\
	Illegal assignment
factor.misuse.dotdot=\
	Range operator only legal in foreach statement
factor.reserved.word=\
	Reserved word ''{0}'' is not allowed here
factor.unexpected.token=\
	Unexpected token

error.at.end=\
	{0} at end of file
