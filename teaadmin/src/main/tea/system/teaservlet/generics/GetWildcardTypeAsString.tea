<% template GetWildcardTypeAsString(java.lang.reflect.WildcardType type, StringBuilder result, Boolean showLink, Boolean showVariables, Boolean resolveVariables)

found = false
foreach (bounds in type.upperBounds)
{
    found = true
    if (bounds isa java.lang.Class)
    {
        if (bounds.name == 'java.lang.Object')
        {
            append(result, '?')
        }
        else
        {
            append(result, '? extends ')
            call GetGenericTypeAsString(bounds, result, showLink, showVariables, false)
        }
    }
    else
    {
        append(result, '? extends ')
        call GetGenericTypeAsString(bounds, result, showLink, showVariables, false)
    }
}

foreach (bounds in type.lowerBounds)
{
    found = true
    if (bounds isa java.lang.Class)
    {
        if (bounds.name == 'java.lang.Object')
        {
            append(result, '?')
        }
        else
        {
            append(result, '? super ')
            call GetGenericTypeAsString(bounds, result, showLink, showVariables, false)
        }
    }
    else
    {
        append(result, '? super ')
        call GetGenericTypeAsString(bounds, result, showLink, showVariables, false)
    }
}

if (not found)
{
    append(result, '?')
}

%>
